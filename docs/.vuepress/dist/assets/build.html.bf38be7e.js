import{d as n}from"./app.f12775d9.js";const s={},a=n('<h1 id="构建-部署" tabindex="-1"><a class="header-anchor" href="#构建-部署" aria-hidden="true">#</a> 构建&amp;部署</h1><div class="custom-container tip"><p class="custom-container-title">前言</p><p>由于是展示项目，所以打包后可能较大，如果项目中没有用到的插件，可以删除对应的文件或者路由，不引用即可，没有引用就不会打包。</p></div><h2 id="构建" tabindex="-1"><a class="header-anchor" href="#构建" aria-hidden="true">#</a> 构建</h2><p>项目开发完成之后，执行以下命令进行构建</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>构建打包成功之后，会在根目录生成 dist 文件夹，里面就是构建打包好的文件</p><h3 id="预览" tabindex="-1"><a class="header-anchor" href="#预览" aria-hidden="true">#</a> 预览</h3><p>框架已经内置了serve服务器环境插件，发布之前可以在本地进行预览</p><p><strong>不能直接打开构建后的 html 文件</strong></p><ul><li>使用项目自定的命令进行预览(推荐)</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 直接预览本地 dist 文件目录</span>\nserve -s dist\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h2><div class="custom-container danger"><p class="custom-container-title">注意</p><p>项目默认是在生产环境开启 Mock，这样做非常不好，只是为了演示环境有数据，不建议在生产环境使用 Mock，而应该使用真实的后台接口，并将 Mock 关闭。</p></div><h3 id="发布" tabindex="-1"><a class="header-anchor" href="#发布" aria-hidden="true">#</a> 发布</h3><p>简单的部署只需要将最终生成的静态文件，dist 文件夹的静态文件发布到你的 cdn 或者静态服务器即可，需要注意的是其中的 index.html 通常会是你后台服务的入口页面，在确定了 js 和 css 的静态之后可能需要改变页面的引入路径。</p><p>例如上传到 nginx</p><p><code>/srv/www/project/index.html</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># nginx配置</span>\nlocation / <span class="token punctuation">{</span>\n  <span class="token comment"># 不缓存html，防止程序更新后缓存继续生效</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request_filename</span> ~* .*<span class="token punctuation">\\</span>.<span class="token punctuation">(</span>?:htm<span class="token operator">|</span>html<span class="token punctuation">)</span>$<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    add_header Cache-Control <span class="token string">&quot;private, no-store, no-cache, must-revalidate, proxy-revalidate&quot;</span><span class="token punctuation">;</span>\n    access_log on<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment"># 这里是vue打包文件dist内的文件的存放路径</span>\n  root   /srv/www/project/<span class="token punctuation">;</span>\n  index  index.html index.htm<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',18);s.render=function(n,s){return a};export{s as default};
