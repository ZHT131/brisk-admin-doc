"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDev = void 0;
const webpack = require("webpack");
const WebpackDevServer = require("webpack-dev-server");
const utils_1 = require("@vuepress/utils");
const utils_2 = require("../utils");
const createDevConfig_1 = require("./createDevConfig");
const createDevServerConfig_1 = require("./createDevServerConfig");
const resolvePort_1 = require("./resolvePort");
const createDev = (options) => async (app) => {
    // resolve host and port
    const host = app.options.host;
    const port = await resolvePort_1.resolvePort(app.options.port);
    // create webpack config
    const config = await createDevConfig_1.createDevConfig(app, options);
    const webpackConfig = utils_2.resolveWebpackConfig({
        config,
        options,
        isServer: false,
        isBuild: false,
    });
    // create webpack compiler
    const compiler = webpack(webpackConfig);
    // create webpack-dev-server
    const serverConfig = createDevServerConfig_1.createDevServerConfig(app, options);
    const server = new WebpackDevServer(compiler, serverConfig);
    // create spinner
    const spinner = utils_1.ora();
    let hasStarted = false;
    let hasFinished = false;
    // start spinner before the first compilation
    compiler.hooks.beforeCompile.tap('vuepress-dev', () => {
        if (hasStarted)
            return;
        hasStarted = true;
        spinner.start('Compiling with webpack...');
    });
    // stop spinner and reject error if the first compilation is failed
    compiler.hooks.failed.tap('vuepress-dev', () => {
        if (hasFinished)
            return;
        hasFinished = true;
        spinner.fail('Compilation failed');
    });
    // stop spinner, show compilation time and print url after first compilation
    compiler.hooks.done.tap('vuepress-dev', ({ endTime, startTime }) => {
        if (hasFinished)
            return;
        hasFinished = true;
        spinner.succeed(`Compilation finished in ${endTime - startTime}ms`);
        // replace `0.0.0.0` with `localhost` as `0.0.0.0` is not available on windows
        const url = `http://${host === '0.0.0.0' ? 'localhost' : host}:${port}${app.options.base}`;
        utils_1.logger.success(`VuePress webpack dev server is listening at ${utils_1.chalk.cyan(url)}`);
    });
    // start dev-server and return the close function
    return new Promise((resolve, reject) => {
        server.listen(port, host, (err) => {
            if (err) {
                utils_1.logger.error(`VuePress dev server failed to start`);
                return reject(err);
            }
            // promisify the close function
            const close = () => new Promise((resolve) => server.close(resolve));
            // resolve the close function
            resolve(close);
        });
    });
};
exports.createDev = createDev;
